{"shell":true,"revision":"c85e049494e2851cefa1e1063902fc9992ffd733","objects":[{"type":null,"source":"lib/parallel_dots.ex:2","object_type":"ModuleObject","moduledoc":"Elixir Wrapper for ParallelDots APIs\n\n## Http Code\n  `200: Successful response`  \n  `304: There was no new text to return`  \n  `500: Backend Error`  \n  `400: Please provide valid input parameter`  \n  `401: Invalid Credentials. Please provide valid API key`  \n  `403: Daily/Monthy Limit Exceeded`  \n  `429: Too Many Requests. Please try after sometime`  \n  `406: Invalid Format`\n\n","module":"Elixir.ParallelDots","id":"ParallelDots"},{"type":"def","source":"lib/parallel_dots.ex:25","signature":[["list",[],null]],"object_type":"FunctionObject","name":"check_config","module_id":"ParallelDots","id":"check_config/1","doc":false,"arity":1},{"type":"def","source":"lib/parallel_dots.ex:18","signature":[],"object_type":"FunctionObject","name":"config","module_id":"ParallelDots","id":"config/0","doc":false,"arity":0},{"type":"def","source":"lib/parallel_dots.ex:35","signature":[["key",[],null],["\\\\",[],[["default",[],null],null]]],"object_type":"FunctionObject","name":"config","module_id":"ParallelDots","id":"config/2","doc":false,"arity":2},{"type":"def","source":"lib/parallel_dots.ex:48","signature":[["text",[],null]],"object_type":"FunctionObject","name":"get_name","module_id":"ParallelDots","id":"get_name/1","doc":"Extract names from given text\n\n## Functionality\nSend POST request to ParallelDots API with a text to extract names from it\n\n## Parameters\n  text::String  \n  api_key::String\n\n## Returns\n  in case of find names  \n  `{:ok, %{\"code\" => 200, \"entities\" => [\"category\" => \"name\", \"confidence_score\" => Float, \"name\" => String, ...]}}`  \n  in case of didnt find names  \n  `{:ok, %{\"code\" => 200, \"entities\" => \"The statement belongs to none of the categories.\"}}`  \n  in case of the HTTPoison failt to execute the request  \n  `{:error, reason}`\n    \n","arity":1},{"type":"def","source":"lib/parallel_dots.ex:92","signature":[["text",[],null]],"object_type":"FunctionObject","name":"get_sentiment","module_id":"ParallelDots","id":"get_sentiment/1","doc":"Extract sentiment from given text\n\n## Functionality\nSend POST request to ParallelDots API with a text to extract sentiment of it\n\n## Parameters\n  text::String  \n  api_key::String\n\n## Returns\n  in case of successful call  \n  `{:ok, %{\"code\" => 200, \"probabilities\" => %{\"negative\" => 0.134, \"neutral\" => 0.29, \"positive\" => 0.576}, \"sentiment\" => \"positive\"}}`  \n  in case of the HTTPoison failt to execute the request  \n  `{:error, reason}`\n","arity":1}],"language":"elixir","git_repo_url":"ssh://git@gl.eweev.com:2222/eweev/ParallelDots_ex.git","client_version":"0.5.6","client_name":"inch_ex","branch_name":"GetName&GetSentiment","args":[]}